// Java Program to create Database

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.SQLException;

public class CreateDatabaseExample {
    public static void main(String[] args) {
        // JDBC URL, username, and password of MySQL server
        String url = "jdbc:mysql://localhost:3306/";
        String user = "yourUsername"; // Replace with your MySQL username
        String password = "yourPassword"; // Replace with your MySQL password

        // SQL statement to create a new database
        String sql = "CREATE DATABASE mydatabase";

        // Establish the connection
        try (Connection conn = DriverManager.getConnection(url, user, password);
             Statement stmt = conn.createStatement()) {
            
            // Execute the SQL statement
            stmt.executeUpdate(sql);
            System.out.println("Database created successfully!");
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
############################################################################
// Java Program to create Table

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.SQLException;

public class CreateTableExample {
    public static void main(String[] args) {
        // JDBC URL, username, and password of MySQL server
        String url = "jdbc:mysql://localhost:3306/mydatabase"; // Change to your database name
        String user = "root"; // Replace with your MySQL username
        String password = ""; // Replace with your MySQL password

        // SQL statement to create a new table
        String sql = "CREATE TABLE employee (" +
                     "empid INT PRIMARY KEY," +
                     "empname VARCHAR(100)," +
                     "salary DECIMAL(10, 2)" +
                     ")";

        // Establish the connection
        try (Connection conn = DriverManager.getConnection(url, user, password);
             Statement stmt = conn.createStatement()) {
            
            // Execute the SQL statement
            stmt.executeUpdate(sql);
            System.out.println("Table 'employee' created successfully!");
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

###################################################################################################################
// Java Program to insert values into database

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.SQLException;

public class InsertEmployeeExample {
    public static void main(String[] args) {
        // JDBC URL, username, and password of MySQL server
        String url = "jdbc:mysql://localhost:3306/mydatabase"; // Change to your database name
        String user = "root"; // Replace with your MySQL username
        String password = ""; // Replace with your MySQL password

        // SQL statements to insert data into the employee table
        String sql1 = "INSERT INTO employee (empid, empname, salary) VALUES (1, 'Alice', 50000.00)";
        String sql2 = "INSERT INTO employee (empid, empname, salary) VALUES (2, 'Bob', 55000.00)";
        String sql3 = "INSERT INTO employee (empid, empname, salary) VALUES (3, 'Charlie', 60000.00)";

        // Establish the connection
        try (Connection conn = DriverManager.getConnection(url, user, password);
             Statement stmt = conn.createStatement()) {
            
            // Execute the SQL statements
            stmt.executeUpdate(sql1);
            stmt.executeUpdate(sql2);
            stmt.executeUpdate(sql3);

            System.out.println("Inserted 3 rows into the employee table successfully!");
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
######################################################################################################################
// Java Program to update database

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.SQLException;

public class UpdateEmployeeExample {
    public static void main(String[] args) {
        // JDBC URL, username, and password of MySQL server
        String url = "jdbc:mysql://localhost:3306/mydatabase"; // Change to your database name
        String user = "root"; // Replace with your MySQL username
        String password = ""; // Replace with your MySQL password

        // SQL statement to update Alice's name to John
        String sql = "UPDATE employee SET empname = 'John' WHERE empname = 'Alice'";

        // Establish the connection
        try (Connection conn = DriverManager.getConnection(url, user, password);
             Statement stmt = conn.createStatement()) {
            
            // Execute the SQL update statement
            int rowsAffected = stmt.executeUpdate(sql);
            System.out.println("Updated " + rowsAffected + " row(s) successfully!");
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
#########################################################################################################################
// Java Program to retrieve Data and display them

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;

public class DisplayEmployeeExample {
    public static void main(String[] args) {
        // JDBC URL, username, and password of MySQL server
        String url = "jdbc:mysql://localhost:3306/mydatabase"; // Change to your database name
        String user = "root"; // Replace with your MySQL username
        String password = ""; // Replace with your MySQL password

        // SQL statement to select all records from the employee table
        String sql = "SELECT * FROM employee";

        // Establish the connection
        try (Connection conn = DriverManager.getConnection(url, user, password);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {
            
            // Display the content of the table
            System.out.println("empid\tempname\t\tsalary");
            System.out.println("-----------------------------------");
            while (rs.next()) {
                int empid = rs.getInt("empid");
                String empname = rs.getString("empname");
                double salary = rs.getDouble("salary");
                System.out.printf("%d\t%s\t%.2f%n", empid, empname, salary);
            }
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

################################################################################################################
// Java Program to delete a row

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.SQLException;

public class DeleteEmployeeExample {
    public static void main(String[] args) {
        // JDBC URL, username, and password of MySQL server
        String url = "jdbc:mysql://localhost:3306/mydatabase"; // Change to your database name
        String user = "root"; // Replace with your MySQL username
        String password = ""; // Replace with your MySQL password

        // SQL statement to delete the row with empname 'John'
        String sql = "DELETE FROM employee WHERE empname = 'John'";

        // Establish the connection
        try (Connection conn = DriverManager.getConnection(url, user, password);
             Statement stmt = conn.createStatement()) {
            
            // Execute the SQL delete statement
            int rowsAffected = stmt.executeUpdate(sql);
            System.out.println("Deleted " + rowsAffected + " row(s) successfully!");
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
#####################################################################################################################
##################################################################################
// Java Program to insert data using prepared statements

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class InsertEmployeeExample {
    public static void main(String[] args) {
        // JDBC URL, username, and password of MySQL server
        String url = "jdbc:mysql://localhost:3306/mydatabase"; // Change to your database name
        String user = "root"; // Replace with your MySQL username
        String password = ""; // Replace with your MySQL password

        // SQL statement to insert data into the employee table
        String sql = "INSERT INTO employee (empid, empname, salary) VALUES (?, ?, ?)";

        // Establish the connection
        try (Connection conn = DriverManager.getConnection(url, user, password);
             PreparedStatement pstmt = conn.prepareStatement(sql)) {
            
            // Insert first employee
            pstmt.setInt(1, 1);
            pstmt.setString(2, "Alice");
            pstmt.setDouble(3, 50000.00);
            pstmt.executeUpdate();

            // Insert second employee
            pstmt.setInt(1, 2);
            pstmt.setString(2, "Bob");
            pstmt.setDouble(3, 55000.00);
            pstmt.executeUpdate();

            // Insert third employee
            pstmt.setInt(1, 3);
            pstmt.setString(2, "Charlie");
            pstmt.setDouble(3, 60000.00);
            pstmt.executeUpdate();

            System.out.println("Inserted 3 rows into the employee table successfully!");
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

